<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syy.springboot.mapper.AuthorityUserMapper">
    <resultMap id="BaseResultMap" type="com.syy.springboot.model.AuthorityUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="del_flag" jdbcType="BIT" property="delFlag"/>
        <collection property="roleList" column="id"
                    ofType="com.syy.springboot.model.AuthorityRole">
            <id column="roleId" jdbcType="INTEGER" property="id"/>
            <result column="create_by" jdbcType="INTEGER" property="createBy"/>
            <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
            <result column="update_by" jdbcType="INTEGER" property="updateBy"/>
            <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
            <result column="role" jdbcType="VARCHAR" property="role"/>
            <result column="del_flag" jdbcType="BIT" property="delFlag"/>
            <collection property="permissionList" column="id"
                        ofType="com.syy.springboot.model.AuthorityPermission" javaType="ArrayList">
                <id column="permissionId" jdbcType="INTEGER" property="id"/>
                <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
                <result column="permissionName" jdbcType="VARCHAR" property="name"/>
                <result column="sort" jdbcType="DECIMAL" property="sort"/>
                <result column="href" jdbcType="VARCHAR" property="href"/>
                <result column="icon" jdbcType="VARCHAR" property="icon"/>
                <result column="available" jdbcType="BIT" property="available"/>
                <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
                <result column="permission" jdbcType="VARCHAR" property="permission"/>
                <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
                <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
                <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
                <result column="del_flag" jdbcType="BIT" property="delFlag"/>
            </collection>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        id, login_name, `password`, role_id, `name`, email, create_by, create_date, update_by, update_date, del_flag
    </sql>

    <sql id="Base_Column_List_New">
        au.id,au.login_name,au.`password`,au.role_id,au.`name`,au.email,au.create_by,
        au.create_date,au.update_by,au.update_date,au.del_flag,ar.id roleId,ar.create_date,ar.create_by,
        ar.update_by,ar.update_date,ar.role,ap.available,ap.create_by,ap.create_date,ap.del_flag,ap.href,
        ap.icon,ap.id permissionId,ap.`name`permissionName,
        ap.parent_id,ap.parent_ids,ap.permission,ap.resource_type,ap.sort,ap.update_by,ap.update_date
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from authority_user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findList" parameterType="commercial.base.db.mysql.commercial.entity.AuthorityUser"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from authority_user
    </select>
    <select id="count" parameterType="map" resultType="java.lang.Integer">
        select count(id)
        from authority_user
        where 1=1
        AND del_flag =0
    </select>

    <select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from authority_user
        where 1=1
        AND del_flag =0
        order by id desc
        limit #{begin} , #{length}
    </select>

    <select id="getByName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List_New"/>
        FROM
        authority_user au
        LEFT JOIN authority_user_role aur ON au.id = aur.user_id
        LEFT JOIN authority_role ar ON ar.id = aur.role_id
        LEFT JOIN authority_role_permission arp ON arp.role_id = ar.id
        LEFT JOIN authority_permission ap ON ap.id = arp.permission_id
        WHERE
        au.login_name = #{name}
        AND au.del_flag = 0
        AND ar.del_flag =0
        and ap.del_flag =0
        and ap.available =0
    </select>
    <select id="getDataAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List_New"/>
        FROM
        authority_user au
        LEFT JOIN authority_user_role aur ON au.id = aur.user_id
        LEFT JOIN authority_role ar ON ar.id = aur.role_id
        LEFT JOIN authority_role_permission arp ON arp.role_id = ar.id
        LEFT JOIN authority_permission ap ON ap.id = arp.permission_id
        WHERE
        au.del_flag = 0
        AND ar.del_flag =0
        and ap.del_flag =0
        and ap.available =0
    </select>
    <select id="getAuthorityUser" resultType="commercial.base.db.mysql.commercial.entity.AuthorityUser">
        select
        id, login_name loginName, `password`, role_id roleId, `name`, email, create_by createBy, create_date createDate,
        update_by updateBy,
        update_date updateDate, del_flag delFlag
        from authority_user
        where 1=1
        AND del_flag =0
        order by id desc
    </select>

    <insert id="insertSelective">
        insert into authority_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="loginName != null">
                login_name,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="roleId != null">
                role_id,
            </if>

            <if test="name != null">
                `name`,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            create_date,
            update_date,
            del_flag,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="loginName != null">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            now(),
            now(),
            0
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective">
        update authority_user
        <set>
            <if test="loginName != null">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            update_date =now(),
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>